{"ast":null,"code":"import { map_url } from './base_url';\nimport axios from 'axios';\nconst SERVICE = axios.create({\n  withCredentials: true,\n  map_url\n});\nconst PLACE_SERVICE = {\n  showPlace: async id => {\n    return await SERVICE.get(\"\".concat(map_url, \"/place/\").concat(id));\n  },\n  addPlace: async place => {\n    return await SERVICE.post(\"\".concat(map_url, \"/place/new\"), place);\n  },\n  editePlace: async data => {\n    return await SERVICE.put(\"\".concat(map_url, \"/place/edit/\").concat(_id));\n  },\n  deletePlaceService: async id => {\n    return await SERVICE.delete(\"\".concat(map_url, \"/place/delete/\").concat(id));\n  }\n};\nexport default PLACE_SERVICE;","map":{"version":3,"sources":["/Users/mefithernandez/Documents/xavier/ironhack/spot-connection/frontend/src/services/placeService.js"],"names":["map_url","axios","SERVICE","create","withCredentials","PLACE_SERVICE","showPlace","id","get","addPlace","place","post","editePlace","data","put","_id","deletePlaceService","delete"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAa;AAAEC,EAAAA,eAAe,EAAE,IAAnB;AAAyBJ,EAAAA;AAAzB,CAAb,CAAhB;AAEA,MAAMK,aAAa,GAAG;AACpBC,EAAAA,SAAS,EAAE,MAAOC,EAAP,IAAc;AACvB,WAAO,MAAML,OAAO,CAACM,GAAR,WAAeR,OAAf,oBAAgCO,EAAhC,EAAb;AACD,GAHmB;AAKpBE,EAAAA,QAAQ,EAAE,MAAOC,KAAP,IAAiB;AACzB,WAAO,MAAMR,OAAO,CAACS,IAAR,WAAgBX,OAAhB,iBAAqCU,KAArC,CAAb;AACD,GAPmB;AASpBE,EAAAA,UAAU,EAAE,MAAOC,IAAP,IAAgB;AAC1B,WAAO,MAAMX,OAAO,CAACY,GAAR,WAAed,OAAf,yBAAqCe,GAArC,EAAb;AACD,GAXmB;AAapBC,EAAAA,kBAAkB,EAAE,MAAOT,EAAP,IAAc;AAChC,WAAO,MAAML,OAAO,CAACe,MAAR,WAAkBjB,OAAlB,2BAA0CO,EAA1C,EAAb;AACD;AAfmB,CAAtB;AAkBA,eAAeF,aAAf","sourcesContent":["import { map_url } from './base_url'\nimport axios from 'axios'\n\nconst SERVICE = axios.create({ withCredentials: true, map_url });\n\nconst PLACE_SERVICE = {\n  showPlace: async (id) => {\n    return await SERVICE.get(`${map_url}/place/${id}`)\n  },\n\n  addPlace: async (place) => {\n    return await SERVICE.post(`${map_url}/place/new`, place)\n  },\n\n  editePlace: async (data) => {\n    return await SERVICE.put(`${map_url}/place/edit/${_id}`)\n  },\n\n  deletePlaceService: async (id) => {\n    return await SERVICE.delete(`${map_url}/place/delete/${id}`)\n  }\n}\n\nexport default PLACE_SERVICE"]},"metadata":{},"sourceType":"module"}